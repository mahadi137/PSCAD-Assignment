!=======================================================================
! Generated by  : PSCAD v4.6.3.0
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   :  Machine-Load
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'
      REAL    REALPOLE      ! Real Pole
!     SUBR    SANDH2        ! Sample and Hold

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_3, NT_4, NT_5, NT_7, NT_8, NT_9
      INTEGER  NT_10, NT_11, NT_12, NT_13, NT_14
      INTEGER  NT_15

! Control Signals
      INTEGER  IT_1, IT_2, IT_3, S2M, BRK, IT_4
      INTEGER  IT_5, LRR, InitEx, InitGv, InitGv2
      INTEGER  InitEx2
      REAL     linev, Pout, Qout, IMACA, IMACB
      REAL     IMACC, RT_1, RT_2, TE, W, TM, RT_3
      REAL     RT_4(3), cfld, vfld, RT_5, RT_6
      REAL     TE2, W2, TM2, vfld2, RT_7(3)
      REAL     cfld2, RT_8, RT_9, RT_10, RT_11
      REAL     RT_12, RT_13, Tmstdy, RT_14, RT_15
      REAL     RT_16, RT_17, Tmstdy2, RT_18
      REAL     RT_19, RT_20, RT_21, RT_22, RT_23
      REAL     RT_24, RT_25, RT_26, f_nom, RT_27
      REAL     RT_28, RT_29, RT_30, RT_31, POUT2
      REAL     QOUT2, Rang, Rang2, IMACA2, IMACB2
      REAL     IMACC2

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3, IVD1_4
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7, RVD1_8
      REAL     RVD1_9, RVD1_10, RVD1_11, RVD1_12
      REAL     RVD1_13, RVD1_14, RVD1_15, RVD1_16
      REAL     RVD1_17, RVD1_18

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 12
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 61
      IPGB      = NPGB
      NPGB      = NPGB + 20
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 39
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      IT_1     = STOI(ISTOI + 1)
      linev    = STOF(ISTOF + 1)
      Pout     = STOF(ISTOF + 2)
      Qout     = STOF(ISTOF + 3)
      IMACA    = STOF(ISTOF + 4)
      IMACB    = STOF(ISTOF + 5)
      IMACC    = STOF(ISTOF + 6)
      IT_2     = STOI(ISTOI + 2)
      RT_1     = STOF(ISTOF + 7)
      IT_3     = STOI(ISTOI + 3)
      RT_2     = STOF(ISTOF + 8)
      TE       = STOF(ISTOF + 9)
      W        = STOF(ISTOF + 10)
      TM       = STOF(ISTOF + 11)
      RT_3     = STOF(ISTOF + 12)
      cfld     = STOF(ISTOF + 16)
      vfld     = STOF(ISTOF + 17)
      RT_5     = STOF(ISTOF + 18)
      S2M      = STOI(ISTOI + 4)
      BRK      = STOI(ISTOI + 5)
      RT_6     = STOF(ISTOF + 19)
      TE2      = STOF(ISTOF + 20)
      W2       = STOF(ISTOF + 21)
      TM2      = STOF(ISTOF + 22)
      vfld2    = STOF(ISTOF + 23)
      cfld2    = STOF(ISTOF + 27)
      RT_8     = STOF(ISTOF + 28)
      RT_9     = STOF(ISTOF + 29)
      RT_10    = STOF(ISTOF + 30)
      RT_11    = STOF(ISTOF + 31)
      IT_4     = STOI(ISTOI + 6)
      RT_12    = STOF(ISTOF + 32)
      RT_13    = STOF(ISTOF + 33)
      Tmstdy   = STOF(ISTOF + 34)
      RT_14    = STOF(ISTOF + 35)
      RT_15    = STOF(ISTOF + 36)
      IT_5     = STOI(ISTOI + 7)
      RT_16    = STOF(ISTOF + 37)
      RT_17    = STOF(ISTOF + 38)
      Tmstdy2  = STOF(ISTOF + 39)
      LRR      = STOI(ISTOI + 8)
      RT_18    = STOF(ISTOF + 40)
      RT_19    = STOF(ISTOF + 41)
      RT_20    = STOF(ISTOF + 42)
      RT_21    = STOF(ISTOF + 43)
      RT_22    = STOF(ISTOF + 44)
      RT_23    = STOF(ISTOF + 45)
      RT_24    = STOF(ISTOF + 46)
      RT_25    = STOF(ISTOF + 47)
      RT_26    = STOF(ISTOF + 48)
      f_nom    = STOF(ISTOF + 49)
      RT_27    = STOF(ISTOF + 50)
      RT_28    = STOF(ISTOF + 51)
      RT_29    = STOF(ISTOF + 52)
      RT_30    = STOF(ISTOF + 53)
      RT_31    = STOF(ISTOF + 54)
      POUT2    = STOF(ISTOF + 55)
      QOUT2    = STOF(ISTOF + 56)
      InitEx   = STOI(ISTOI + 9)
      Rang     = STOF(ISTOF + 57)
      InitGv   = STOI(ISTOI + 10)
      Rang2    = STOF(ISTOF + 58)
      InitGv2  = STOI(ISTOI + 11)
      InitEx2  = STOI(ISTOI + 12)
      IMACA2   = STOF(ISTOF + 59)
      IMACB2   = STOF(ISTOF + 60)
      IMACC2   = STOF(ISTOF + 61)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         RT_4(IT_0) = STOF(ISTOF + 12 + IT_0)
         RT_7(IT_0) = STOF(ISTOF + 23 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------

      NT_3  = NODE(INODE + 3)
      NT_4  = NODE(INODE + 4)
      NT_5  = NODE(INODE + 5)
      NT_7  = NODE(INODE + 7)
      NT_8  = NODE(INODE + 8)
      NT_9  = NODE(INODE + 9)
      NT_10 = NODE(INODE + 10)
      NT_11 = NODE(INODE + 11)
      NT_12 = NODE(INODE + 12)
      NT_13 = NODE(INODE + 13)
      NT_14 = NODE(INODE + 14)
      NT_15 = NODE(INODE + 15)

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 

      RT_18 = 1.07

! 20:[timerdefn]  
!  Timer
      IF(TIME.GE.0.3)THEN
        S2M = 1
      ELSE
        S2M = 0
      END IF
!

! 30:[timerdefn]  
!  Timer
      IF(TIME.GE.2.0)THEN
        LRR = 1
      ELSE
        LRR = 0
      END IF
!

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+7), (IBRCH+8), (IBRCH+9),SS,1.0,0)

! 80:[const] Real Constant 

      RT_22 = 0.0

! 90:[const] Real Constant 

      RT_25 = 0.05

! 100:[const] Real Constant 

      f_nom = 50.0

! 110:[edge] Edge Detector 
!  Edge_Detector
      IF (REAL(LRR) .LT. STORF(NSTORF)) THEN
         IT_4 = 0
      ELSE IF (REAL(LRR) .GT. STORF(NSTORF)) THEN
         IT_4 = 1
      ELSE
         IT_4 = 0
      ENDIF
      STORF(NSTORF) = REAL(LRR)
      NSTORF = NSTORF + 1
!

! 120:[tbreakn] Timed Breaker Logic 
! Timed breaker logic
      IF ( TIMEZERO ) THEN
         BRK = 1
      ELSE
         BRK = 1
         IF ( TIME .GE. 2.5 ) BRK = (1-1)
      ENDIF

! 130:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+37), (IBRCH+38), (IBRCH+39),SS,1.0,0)

! 140:[pgb] Output Channel 'Trafo prim current, phase A'

      PGB(IPGB+1) = IMACA

! 150:[pgb] Output Channel 'Trafo prim current, phase B'

      PGB(IPGB+2) = IMACB

! 160:[pgb] Output Channel 'Trafo prim current, phase C'

      PGB(IPGB+3) = IMACC

! 170:[const] Real Constant 

      RT_28 = 0.0

! 180:[const] Real Constant 

      RT_31 = 0.05

! 190:[edge] Edge Detector 
!  Edge_Detector
      IF (REAL(LRR) .LT. STORF(NSTORF)) THEN
         IT_5 = 0
      ELSE IF (REAL(LRR) .GT. STORF(NSTORF)) THEN
         IT_5 = 1
      ELSE
         IT_5 = 0
      ENDIF
      STORF(NSTORF) = REAL(LRR)
      NSTORF = NSTORF + 1
!

! 230:[mult] Multiplier 
      RT_24 = f_nom * RT_25

! 240:[mult] Multiplier 
      RT_30 = f_nom * RT_31

! 250:[sumjct] Summing/Differencing Junctions 
      RT_21 = + RT_20 - f_nom

! 260:[div] Divider 
!
      IF (ABS(RT_24) .LT. 1.0E-100) THEN
         IF (RT_24 .LT. 0.0)  THEN
            RT_23 = -1.0E100 * RT_21
         ELSE
            RT_23 =  1.0E100 * RT_21
         ENDIF
      ELSE
         RT_23 = RT_21 / RT_24
      ENDIF
!

! 270:[sumjct] Summing/Differencing Junctions 
      RT_13 = - RT_22 - RT_23

! 280:[realpole] Real Pole 
!  Real_Pole
      RT_10 = REALPOLE(IT_4,1,0,1.0,0.35,RT_13,0.0,-10.0,10.0)

! 290:[realpole] Real Pole 
!  Real_Pole
      RT_11 = REALPOLE(IT_4,1,0,1.0,0.15,RT_10,0.0,-10.0,10.0)

! 300:[sync_machine] Synchronous Machine 'TurboG'
      CALL COMPONENT_ID(ICALL_NO,1107000289)
! RVD1_1 - Speed
! RVD1_2 - Neutral Voltage
! RVD1_3 - Neutral Current
! RVD1_4 - Load Angle
! RVD1_5 - Rotor Mechanical Angle
! RVD1_6 - Real Power output
! RVD1_7 - Reactive Power output
! RVD1_8 - Mechanical Torque
! RVD1_9 - Electrical Torque
! RVD1_10:15 - Monitored STOR locations
! RVD1_16:17 - Terminal Voltage RMS,pu
! RVD1_18 - Inverse of Base MVA
! IVD1_2 - Machine is active, Initialize exciter
! IVD1_3 - Torque driven, Initialize governor/turbine
      STORI(NSTORI) = NINT(STOR(NEXC+294))
      IVD1_1 = NRTCF
      RVD1_1 = RTCF(IVD1_1+2)
      CALL SYNCMC3P1_EXE(SS,  (IBRCH+10), (IBRCH+11), (IBRCH+12),0.0,0,S&
     &2M,1.0,0,LRR,RVD1_1,RT_5,0,0,1.0,0.0,314.15926,vfld,0,1.0,cfld,RVD&
     &1_2,RVD1_3,RVD1_4,RVD1_5,W,TE,RVD1_6,RVD1_7,RVD1_8,RVD1_9,IVD1_2,I&
     &VD1_3,RVD1_10,RVD1_11,RVD1_12,RVD1_13,RVD1_14,RVD1_15)
      TM = RT_5
      IF (IVD1_3 .EQ. 0) TM = RVD1_8
      Tmstdy = RVD1_8
      RT_3 = STOR(NEXC-375+265)*STOR(NEXC-375+302)
      IF ((IVD1_2 .EQ. 1) .AND. (STORI(NSTORI).EQ.0)) THEN
          IF (STOR(NEXC-375+293).GT.0.5) THEN
              STORF(NSTORF) = STOR(NEXC-375+161)
          ELSE
              STORF(NSTORF) = STOR(NEXC-375+296)
          ENDIF
      ENDIF
      IF (IVD1_2 .EQ. 1) THEN
        STORF(NSTORF+1) = STORF(NSTORF+1) + (W-RTCF(IVD1_1+2))*DELT
        IF (IVD1_3 .EQ. 0) STORF(NSTORF+2) = RVD1_4
        STORF(NSTORF+3) = STORF(NSTORF) + STORF(NSTORF+1) + STORF(NSTORF&
     &+2)
      ELSE
        STORF(NSTORF+3) = 0.0
      ENDIF
      RVD1_16 = VM3PH2(SS,NT_4,NT_5,NT_3,0.02)/(SQRT_3*RTCF(IVD1_1+1))
      IF(RVD1_16 .LT. 1.0E-8) THEN
         RVD1_17 = 1.0
      ELSE
         RVD1_17 = RVD1_16
      ENDIF
      RVD1_18 = 1.0/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      RT_4(1) = RVD1_17
      IF(RVD1_16 .LT. 1.0E-8) THEN
         RT_4(2) = 0.0
         RT_4(3) = 0.0
      ELSE
         RT_4(2) = RVD1_6*RVD1_18/RVD1_17
         RT_4(3) = -RVD1_7*RVD1_18/RVD1_17
      ENDIF
      W = W/RTCF(IVD1_1+2)
      POUT = RVD1_6/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      QOUT = RVD1_7/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      Rang = RVD1_5
      InitGv = IVD1_3
      InitEx = IVD1_2
      NSTORF = NSTORF + 4
      NSTORI = NSTORI + 1

! 310:[sumjct] Summing/Differencing Junctions 
      RT_27 = + RT_26 - f_nom

! 320:[div] Divider 
!
      IF (ABS(RT_30) .LT. 1.0E-100) THEN
         IF (RT_30 .LT. 0.0)  THEN
            RT_29 = -1.0E100 * RT_27
         ELSE
            RT_29 =  1.0E100 * RT_27
         ENDIF
      ELSE
         RT_29 = RT_27 / RT_30
      ENDIF
!

! 330:[sumjct] Summing/Differencing Junctions 
      RT_17 = - RT_28 - RT_29

! 340:[realpole] Real Pole 
!  Real_Pole
      RT_14 = REALPOLE(IT_5,1,0,1.0,0.35,RT_17,0.0,-10.0,10.0)

! 350:[realpole] Real Pole 
!  Real_Pole
      RT_15 = REALPOLE(IT_5,1,0,1.0,0.15,RT_14,0.0,-10.0,10.0)

! 360:[sync_machine] Synchronous Machine 'TurboG2'
      CALL COMPONENT_ID(ICALL_NO,1950987173)
! RVD1_1 - Speed
! RVD1_2 - Neutral Voltage
! RVD1_3 - Neutral Current
! RVD1_4 - Load Angle
! RVD1_5 - Rotor Mechanical Angle
! RVD1_6 - Real Power output
! RVD1_7 - Reactive Power output
! RVD1_8 - Mechanical Torque
! RVD1_9 - Electrical Torque
! RVD1_10:15 - Monitored STOR locations
! RVD1_16:17 - Terminal Voltage RMS,pu
! RVD1_18 - Inverse of Base MVA
! IVD1_2 - Machine is active, Initialize exciter
! IVD1_3 - Torque driven, Initialize governor/turbine
      STORI(NSTORI) = NINT(STOR(NEXC+294))
      IVD1_1 = NRTCF
      RVD1_1 = RTCF(IVD1_1+2)
      CALL SYNCMC3P1_EXE(SS,  (IBRCH+28), (IBRCH+29), (IBRCH+30),0.0,0,S&
     &2M,1.0,0,LRR,RVD1_1,RT_8,0,0,1.0,0.0,314.15926,vfld2,0,1.0,cfld2,R&
     &VD1_2,RVD1_3,RVD1_4,RVD1_5,W2,TE2,RVD1_6,RVD1_7,RVD1_8,RVD1_9,IVD1&
     &_2,IVD1_3,RVD1_10,RVD1_11,RVD1_12,RVD1_13,RVD1_14,RVD1_15)
      TM2 = RT_8
      IF (IVD1_3 .EQ. 0) TM2 = RVD1_8
      Tmstdy2 = RVD1_8
      vfld2 = STOR(NEXC-375+265)*STOR(NEXC-375+302)
      IF ((IVD1_2 .EQ. 1) .AND. (STORI(NSTORI).EQ.0)) THEN
          IF (STOR(NEXC-375+293).GT.0.5) THEN
              STORF(NSTORF) = STOR(NEXC-375+161)
          ELSE
              STORF(NSTORF) = STOR(NEXC-375+296)
          ENDIF
      ENDIF
      IF (IVD1_2 .EQ. 1) THEN
        STORF(NSTORF+1) = STORF(NSTORF+1) + (W2-RTCF(IVD1_1+2))*DELT
        IF (IVD1_3 .EQ. 0) STORF(NSTORF+2) = RVD1_4
        STORF(NSTORF+3) = STORF(NSTORF) + STORF(NSTORF+1) + STORF(NSTORF&
     &+2)
      ELSE
        STORF(NSTORF+3) = 0.0
      ENDIF
      RVD1_16 = VM3PH2(SS,NT_15,NT_14,NT_13,0.02)/(SQRT_3*RTCF(IVD1_1+1)&
     &)
      IF(RVD1_16 .LT. 1.0E-8) THEN
         RVD1_17 = 1.0
      ELSE
         RVD1_17 = RVD1_16
      ENDIF
      RVD1_18 = 1.0/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      RT_7(1) = RVD1_17
      IF(RVD1_16 .LT. 1.0E-8) THEN
         RT_7(2) = 0.0
         RT_7(3) = 0.0
      ELSE
         RT_7(2) = RVD1_6*RVD1_18/RVD1_17
         RT_7(3) = -RVD1_7*RVD1_18/RVD1_17
      ENDIF
      W2 = W2/RTCF(IVD1_1+2)
      POUT2 = RVD1_6/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      QOUT2 = RVD1_7/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      Rang2 = RVD1_5
      InitGv2 = IVD1_3
      InitEx2 = IVD1_2
      NSTORF = NSTORF + 4
      NSTORI = NSTORI + 1

! 370:[sandhdefn] Sample and Hold 
!  Sample and Hold
      CALL SANDH2(Tmstdy2,LRR,  1,  RT_16)

! 380:[sumjct] Summing/Differencing Junctions 
      RT_8 = + RT_16 + RT_15

! 390:[gain] Gain Block 
!  Gain
      RT_26 = f_nom * W2

! 400:[excac] Type AC exciter 
      CALL COMPONENT_ID(ICALL_NO,1532356110)
! Alternator Supplied Controlled- Rectifier Exciter AC4A
      CALL EXCAC4A2_EXE(RT_18,cfld,RT_4,0.0,RT_3,InitEx,vfld,-1.0E10)
      RT_19 = STORF(THIS)

! 410:[sandhdefn] Sample and Hold 
!  Sample and Hold
      CALL SANDH2(Tmstdy,LRR,  1,  RT_12)

! 420:[sumjct] Summing/Differencing Junctions 
      RT_5 = + RT_12 + RT_11

! 430:[gain] Gain Block 
!  Gain
      RT_20 = f_nom * W

! 440:[pgb] Output Channel 'Qout2'

      PGB(IPGB+4) = 700.0 * QOUT2

! 450:[pgb] Output Channel 'InitTG2'

      PGB(IPGB+5) = Tmstdy2

! 460:[pgb] Output Channel 'Pout2'

      PGB(IPGB+6) = 700.0 * POUT2

! 470:[pgb] Output Channel 'Speed2'

      PGB(IPGB+7) = 50.0 * W2

! 480:[pgb] Output Channel 'Normalized field voltage'

      PGB(IPGB+8) = vfld

! 490:[pgb] Output Channel 'Qout1'

      PGB(IPGB+9) = 700.0 * Qout

! 500:[pgb] Output Channel 'Normalized field current'

      PGB(IPGB+10) = cfld

! 510:[pgb] Output Channel 'Pout1'

      PGB(IPGB+11) = 700.0 * Pout

! 520:[pgb] Output Channel 'Tm2'

      PGB(IPGB+12) = TM2

! 530:[realpole] Real Pole 
!  Real_Pole
      RT_9 = REALPOLE(0,1,0,1.0,0.05,TE2,0.0,-10.0,10.0)

! 540:[pgb] Output Channel 'Te2'

      PGB(IPGB+13) = RT_9

! 550:[breaker3] 3 Phase Breaker 'BRK'
      IVD1_4 = NSTORI
      NSTORI = NSTORI + 3
! Three Phase Breaker
      CALL EMTDC_BREAKER1(SS, (IBRCH+25),0.01,1000000.0,RTCF(NRTCF),0,NI&
     &NT(1.0-REAL(BRK)))
      CALL EMTDC_BREAKER1(SS, (IBRCH+26),0.01,1000000.0,RTCF(NRTCF),0,NI&
     &NT(1.0-REAL(BRK)))
      CALL EMTDC_BREAKER1(SS, (IBRCH+27),0.01,1000000.0,RTCF(NRTCF),0,NI&
     &NT(1.0-REAL(BRK)))
!
      IVD1_1 = 2*E_BtoI(OPENBR( (IBRCH+25),SS))
      IVD1_2 = 2*E_BtoI(OPENBR( (IBRCH+26),SS))
      IVD1_3 = 2*E_BtoI(OPENBR( (IBRCH+27),SS))
      NRTCF = NRTCF + 1
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+0) .NE. IVD1_1)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1915567495,IVD1_1,"BOpen1")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+1) .NE. IVD1_2)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1915567495,IVD1_2,"BOpen2")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+2) .NE. IVD1_3)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1915567495,IVD1_3,"BOpen3")
      ENDIF
      STORI(IVD1_4+0) = 2*E_BtoI(OPENBR( (IBRCH+25),SS))
      STORI(IVD1_4+1) = 2*E_BtoI(OPENBR( (IBRCH+26),SS))
      STORI(IVD1_4+2) = 2*E_BtoI(OPENBR( (IBRCH+27),SS))

! 560:[pgb] Output Channel 'InitTG'

      PGB(IPGB+14) = Tmstdy

! 570:[pgb] Output Channel 'Speed'

      PGB(IPGB+15) = 50.0 * W

! 580:[pgb] Output Channel 'Tm'

      PGB(IPGB+16) = TM

! 600:[realpole] Real Pole 
!  Real_Pole
      RT_6 = REALPOLE(0,1,0,1.0,0.05,TE,0.0,-10.0,10.0)

! 610:[pgb] Output Channel 'Te'

      PGB(IPGB+18) = RT_6

! 1:[fload] Fixed Load 
      CALL TLDM34(NT_9,SS,300.0,0.0,230.0,0.0,0.0,0.0,0.0,50.0)

! 1:[fload] Fixed Load 
      CALL TLDM34(NT_12,SS,100.0,0.0,230.0,0.0,0.0,0.0,0.0,50.0)

! 1:[fload] Fixed Load 
      CALL TLDM34(NT_7,SS,300.0,0.0,230.0,0.0,0.0,0.0,0.0,50.0)

! 1:[fload] Fixed Load 
      CALL TLDM34(NT_10,SS,100.0,0.0,230.0,0.0,0.0,0.0,0.0,50.0)

! 1:[fload] Fixed Load 
      CALL TLDM34(NT_8,SS,300.0,0.0,230.0,0.0,0.0,0.0,0.0,50.0)

! 1:[fload] Fixed Load 
      CALL TLDM34(NT_11,SS,100.0,0.0,230.0,0.0,0.0,0.0,0.0,50.0)

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 1) = linev
      STOF(ISTOF + 2) = Pout
      STOF(ISTOF + 3) = Qout
      STOF(ISTOF + 4) = IMACA
      STOF(ISTOF + 5) = IMACB
      STOF(ISTOF + 6) = IMACC
      STOI(ISTOI + 2) = IT_2
      STOF(ISTOF + 7) = RT_1
      STOI(ISTOI + 3) = IT_3
      STOF(ISTOF + 8) = RT_2
      STOF(ISTOF + 9) = TE
      STOF(ISTOF + 10) = W
      STOF(ISTOF + 11) = TM
      STOF(ISTOF + 12) = RT_3
      STOF(ISTOF + 16) = cfld
      STOF(ISTOF + 17) = vfld
      STOF(ISTOF + 18) = RT_5
      STOI(ISTOI + 4) = S2M
      STOI(ISTOI + 5) = BRK
      STOF(ISTOF + 19) = RT_6
      STOF(ISTOF + 20) = TE2
      STOF(ISTOF + 21) = W2
      STOF(ISTOF + 22) = TM2
      STOF(ISTOF + 23) = vfld2
      STOF(ISTOF + 27) = cfld2
      STOF(ISTOF + 28) = RT_8
      STOF(ISTOF + 29) = RT_9
      STOF(ISTOF + 30) = RT_10
      STOF(ISTOF + 31) = RT_11
      STOI(ISTOI + 6) = IT_4
      STOF(ISTOF + 32) = RT_12
      STOF(ISTOF + 33) = RT_13
      STOF(ISTOF + 34) = Tmstdy
      STOF(ISTOF + 35) = RT_14
      STOF(ISTOF + 36) = RT_15
      STOI(ISTOI + 7) = IT_5
      STOF(ISTOF + 37) = RT_16
      STOF(ISTOF + 38) = RT_17
      STOF(ISTOF + 39) = Tmstdy2
      STOI(ISTOI + 8) = LRR
      STOF(ISTOF + 40) = RT_18
      STOF(ISTOF + 41) = RT_19
      STOF(ISTOF + 42) = RT_20
      STOF(ISTOF + 43) = RT_21
      STOF(ISTOF + 44) = RT_22
      STOF(ISTOF + 45) = RT_23
      STOF(ISTOF + 46) = RT_24
      STOF(ISTOF + 47) = RT_25
      STOF(ISTOF + 48) = RT_26
      STOF(ISTOF + 49) = f_nom
      STOF(ISTOF + 50) = RT_27
      STOF(ISTOF + 51) = RT_28
      STOF(ISTOF + 52) = RT_29
      STOF(ISTOF + 53) = RT_30
      STOF(ISTOF + 54) = RT_31
      STOF(ISTOF + 55) = POUT2
      STOF(ISTOF + 56) = QOUT2
      STOI(ISTOI + 9) = InitEx
      STOF(ISTOF + 57) = Rang
      STOI(ISTOI + 10) = InitGv
      STOF(ISTOF + 58) = Rang2
      STOI(ISTOI + 11) = InitGv2
      STOI(ISTOI + 12) = InitEx2
      STOF(ISTOF + 59) = IMACA2
      STOF(ISTOF + 60) = IMACB2
      STOF(ISTOF + 61) = IMACC2

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 12 + IT_0) = RT_4(IT_0)
         STOF(ISTOF + 23 + IT_0) = RT_7(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'
      REAL    VBRANCH       ! 

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_1, NT_2, NT_3, NT_4, NT_5, NT_6
      INTEGER  NT_7, NT_8, NT_9

! Control Signals
      INTEGER  IT_1, IT_2, IT_3
      REAL     linev, IMACA, IMACB, IMACC, RT_1
      REAL     RT_2, RT_18, RT_22, RT_25, f_nom
      REAL     RT_28, RT_31, IMACA2, IMACB2
      REAL     IMACC2

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 20
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 39
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      IT_1     = STOI(ISTOI + 1)
      linev    = STOF(ISTOF + 1)
      IMACA    = STOF(ISTOF + 4)
      IMACB    = STOF(ISTOF + 5)
      IMACC    = STOF(ISTOF + 6)
      IT_2     = STOI(ISTOI + 2)
      RT_1     = STOF(ISTOF + 7)
      IT_3     = STOI(ISTOI + 3)
      RT_2     = STOF(ISTOF + 8)
      RT_18    = STOF(ISTOF + 40)
      RT_22    = STOF(ISTOF + 44)
      RT_25    = STOF(ISTOF + 47)
      f_nom    = STOF(ISTOF + 49)
      RT_28    = STOF(ISTOF + 51)
      RT_31    = STOF(ISTOF + 54)
      IMACA2   = STOF(ISTOF + 59)
      IMACB2   = STOF(ISTOF + 60)
      IMACC2   = STOF(ISTOF + 61)


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------

      NT_1  = NODE(INODE + 1)
      NT_2  = NODE(INODE + 2)
      NT_3  = NODE(INODE + 3)
      NT_4  = NODE(INODE + 4)
      NT_5  = NODE(INODE + 5)
      NT_6  = NODE(INODE + 6)
      NT_7  = NODE(INODE + 7)
      NT_8  = NODE(INODE + 8)
      NT_9  = NODE(INODE + 9)

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 

      RT_18 = 1.07

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      IMACA = CDCTR(1,(IXFMR + 1))
      IMACB = CDCTR(1,(IXFMR + 2))
      IMACC = CDCTR(1,(IXFMR + 3))

! 80:[const] Real Constant 

      RT_22 = 0.0

! 90:[const] Real Constant 

      RT_25 = 0.05

! 100:[const] Real Constant 

      f_nom = 50.0

! 130:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      IMACA2 = CDCTR(1,(IXFMR + 4))
      IMACB2 = CDCTR(1,(IXFMR + 5))
      IMACC2 = CDCTR(1,(IXFMR + 6))

! 170:[const] Real Constant 

      RT_28 = 0.0

! 180:[const] Real Constant 

      RT_31 = 0.05

! 200:[rms3ph] Three Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF) ! Inverse of rated voltage
      NRTCF = NRTCF + 1
      linev = RVD1_1 * VM3PH2(SS, NT_4, NT_5, NT_3, 0.02)
!

! 210:[rms3ph] Three Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF) ! Inverse of rated voltage
      NRTCF = NRTCF + 1
      RT_2 = RVD1_1 * VM3PH2(SS, NT_2, NT_6, NT_1, 0.02)
!

! 220:[rms3ph] Three Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF) ! Inverse of rated voltage
      NRTCF = NRTCF + 1
      RT_1 = RVD1_1 * VM3PH2(SS, NT_8, NT_7, NT_9, 0.02)
!

! 550:[breaker3] 3 Phase Breaker 'BRK'
! Three Phase Breaker Currents
      CALL BRK_POWER(SS, (IBRCH+25), (IBRCH+26), (IBRCH+27),0,0,0,IVD1_1&
     &,0.02,RVD1_1,RVD1_2)

! 590:[pgb] Output Channel 'Voltage on HV side of 400/110 kV trafo'

      PGB(IPGB+17) = RT_1

! 620:[pgb] Output Channel 'Voltage on HV side of generator trafo'

      PGB(IPGB+19) = RT_2

! 630:[pgb] Output Channel 'Output voltage of generator'

      PGB(IPGB+20) = linev

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 1) = linev
      STOF(ISTOF + 4) = IMACA
      STOF(ISTOF + 5) = IMACB
      STOF(ISTOF + 6) = IMACC
      STOI(ISTOI + 2) = IT_2
      STOF(ISTOF + 7) = RT_1
      STOI(ISTOI + 3) = IT_3
      STOF(ISTOF + 8) = RT_2
      STOF(ISTOF + 40) = RT_18
      STOF(ISTOF + 44) = RT_22
      STOF(ISTOF + 47) = RT_25
      STOF(ISTOF + 49) = f_nom
      STOF(ISTOF + 51) = RT_28
      STOF(ISTOF + 54) = RT_31
      STOF(ISTOF + 59) = IMACA2
      STOF(ISTOF + 60) = IMACB2
      STOF(ISTOF + 61) = IMACC2


!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_18, RT_22, RT_25, f_nom, RT_28
      REAL     RT_31

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3, IVD1_4
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD10_1(10)
      REAL     RVD10_2(10)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 39
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 
      RT_18 = 1.07

! 20:[timerdefn]  

! 30:[timerdefn]  

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,287994181)
      RVD1_1 = ONE_3RD*820.0
      RVD1_2 = 400.0*SQRT_1BY3
      RVD1_3 = 26.0
      CALL E_TF2W_CFG((IXFMR + 1),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 2),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 3),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(820.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+1),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+2),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+3),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+4),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+5),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+6),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+7), (IBRCH+8), (IBRCH+9),SS,RVD1_1,RVD1_2,0&
     &.2,1.25,50.0,1.0,1.0,0.0)

! 80:[const] Real Constant 
      RT_22 = 0.0

! 90:[const] Real Constant 
      RT_25 = 0.05

! 100:[const] Real Constant 
      f_nom = 50.0

! 110:[edge] Edge Detector 

! 130:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,1945237238)
      RVD1_1 = ONE_3RD*820.0
      RVD1_2 = 400.0*SQRT_1BY3
      RVD1_3 = 26.0
      CALL E_TF2W_CFG((IXFMR + 4),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 5),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 6),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(820.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+31),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+32),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+33),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+34),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+35),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+36),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+37), (IBRCH+38), (IBRCH+39),SS,RVD1_1,RVD1_&
     &2,0.2,1.25,50.0,1.0,1.0,0.0)

! 140:[pgb] Output Channel 'Trafo prim current, phase A'

! 150:[pgb] Output Channel 'Trafo prim current, phase B'

! 160:[pgb] Output Channel 'Trafo prim current, phase C'

! 170:[const] Real Constant 
      RT_28 = 0.0

! 180:[const] Real Constant 
      RT_31 = 0.05

! 190:[edge] Edge Detector 

! 230:[mult] Multiplier 

! 240:[mult] Multiplier 

! 250:[sumjct] Summing/Differencing Junctions 

! 260:[div] Divider 

! 270:[sumjct] Summing/Differencing Junctions 

! 280:[realpole] Real Pole 

! 290:[realpole] Real Pole 

! 300:[sync_machine] Synchronous Machine 'TurboG'
      CALL COMPONENT_ID(ICALL_NO,1107000289)
      RVD10_1(1) = 0.0
      RVD10_2(1) = 0.0
      RVD10_1(2) = 1.0
      RVD10_2(2) = SQRT_2/(1.014-0.163*1.0)
      RVD10_1(3) = -1.0
      RVD10_2(3) = 0.0
      DO IVD1_1 = 4,10
        RVD10_1(IVD1_1) = 0.0
        RVD10_2(IVD1_1) = 0.0
      ENDDO
      CALL SYNCMC3P0_CFG(1,0,1,314.15926,0.0051716, 0.163,1.0,1.014,0.28&
     &,0.314,1.0E-6, 0.77,0.375,0.228,RVD1_1,RVD1_2,RVD1_3)
      RVD1_4 = 0.0/(3.0*15.01*15.56)
      RVD1_5 = 0.0/(3.0*15.01*15.56)
      CALL SYNCMC3P1_CFG(1,1,1,1,1,1,1,1,1,15.56,15.01,314.15926,10000.0&
     &,0.0,3.0,0.0,300.0,RVD1_1,RVD1_2,1.014,0.28, 0.039,0.314,6.55,1.0E&
     &6,1.0E6, 0.77,0.375,0.071, 1.0E6,1.0E6, RVD10_1,RVD10_2, 1.07,0.0,&
     &RVD1_4,RVD1_5,0.0, 0.1,100.0,0.2,1.07,0.0)

! 310:[sumjct] Summing/Differencing Junctions 

! 320:[div] Divider 

! 330:[sumjct] Summing/Differencing Junctions 

! 340:[realpole] Real Pole 

! 350:[realpole] Real Pole 

! 360:[sync_machine] Synchronous Machine 'TurboG2'
      CALL COMPONENT_ID(ICALL_NO,1950987173)
      RVD10_1(1) = 0.0
      RVD10_2(1) = 0.0
      RVD10_1(2) = 1.0
      RVD10_2(2) = SQRT_2/(1.014-0.163*1.0)
      RVD10_1(3) = -1.0
      RVD10_2(3) = 0.0
      DO IVD1_1 = 4,10
        RVD10_1(IVD1_1) = 0.0
        RVD10_2(IVD1_1) = 0.0
      ENDDO
      CALL SYNCMC3P0_CFG(1,0,1,314.15926,0.0051716, 0.163,1.0,1.014,0.28&
     &,0.314,1.0E-6, 0.77,0.375,0.228,RVD1_1,RVD1_2,RVD1_3)
      RVD1_4 = 0.0/(3.0*15.01*15.56)
      RVD1_5 = 0.0/(3.0*15.01*15.56)
      CALL SYNCMC3P1_CFG(1,1,1,1,1,1,1,1,1,15.56,15.01,314.15926,10000.0&
     &,0.0,3.0,0.0,300.0,RVD1_1,RVD1_2,1.014,0.28, 0.039,0.314,6.55,1.0E&
     &6,1.0E6, 0.77,0.375,0.071, 1.0E6,1.0E6, RVD10_1,RVD10_2, 1.07,0.0,&
     &RVD1_4,RVD1_5,0.0, 0.1,100.0,0.2,1.07,0.0)

! 370:[sandhdefn] Sample and Hold 

! 380:[sumjct] Summing/Differencing Junctions 

! 390:[gain] Gain Block 

! 400:[excac] Type AC exciter 
      CALL COMPONENT_ID(ICALL_NO,1532356110)
      CALL EXCAC4A2_CFG(10.0,1.0,100.0,0.015,10.0,-10.0,4.8,-4.53,0.0,0.&
     &0,0.0,0.0)

! 410:[sandhdefn] Sample and Hold 

! 420:[sumjct] Summing/Differencing Junctions 

! 430:[gain] Gain Block 

! 440:[pgb] Output Channel 'Qout2'

! 450:[pgb] Output Channel 'InitTG2'

! 460:[pgb] Output Channel 'Pout2'

! 470:[pgb] Output Channel 'Speed2'

! 480:[pgb] Output Channel 'Normalized field voltage'

! 490:[pgb] Output Channel 'Qout1'

! 500:[pgb] Output Channel 'Normalized field current'

! 510:[pgb] Output Channel 'Pout1'

! 520:[pgb] Output Channel 'Tm2'

! 530:[realpole] Real Pole 

! 540:[pgb] Output Channel 'Te2'

! 550:[breaker3] 3 Phase Breaker 'BRK'
      CALL COMPONENT_ID(ICALL_NO,1915567495)
      RTCF(NRTCF) = ABS(0.0)
      NRTCF = NRTCF + 1

! 560:[pgb] Output Channel 'InitTG'

! 570:[pgb] Output Channel 'Speed'

! 580:[pgb] Output Channel 'Tm'

! 600:[realpole] Real Pole 

! 610:[pgb] Output Channel 'Te'

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,886333789)
      CALL PI3_SECTION_CFG(3,1,1, 400.0,200.0,50.0,50000.0,7.4e-08,8.0e-&
     &07,2.2e-18,1.5,1.5,1.5,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,I&
     &VD1_1,IVD1_2,IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+13),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+14),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+15),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+16),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+17),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+18),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+19),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+20),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+21),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+22),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+23),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+24),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 7),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_18, RT_22, RT_25, f_nom, RT_28
      REAL     RT_31

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 39
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 
      RT_18 = 1.07

! 80:[const] Real Constant 
      RT_22 = 0.0

! 90:[const] Real Constant 
      RT_25 = 0.05

! 100:[const] Real Constant 
      f_nom = 50.0

! 170:[const] Real Constant 
      RT_28 = 0.0

! 180:[const] Real Constant 
      RT_31 = 0.05

! 200:[rms3ph] Three Phase RMS Meter 
      RTCF(NRTCF) = 1.0
      IF (26.0 .GT. 1.0E-20) RTCF(NRTCF) = 1.0/26.0
      NRTCF = NRTCF + 1

! 210:[rms3ph] Three Phase RMS Meter 
      RTCF(NRTCF) = 1.0
      IF (400.0 .GT. 1.0E-20) RTCF(NRTCF) = 1.0/400.0
      NRTCF = NRTCF + 1

! 220:[rms3ph] Three Phase RMS Meter 
      RTCF(NRTCF) = 1.0
      IF (400.0 .GT. 1.0E-20) RTCF(NRTCF) = 1.0/400.0
      NRTCF = NRTCF + 1

! 590:[pgb] Output Channel 'Voltage on HV side of 400/110 kV trafo'

! 620:[pgb] Output Channel 'Voltage on HV side of generator trafo'

! 630:[pgb] Output Channel 'Output voltage of generator'

      RETURN
      END

