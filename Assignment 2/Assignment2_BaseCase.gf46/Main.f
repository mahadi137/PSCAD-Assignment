!=======================================================================
! Generated by  : PSCAD v4.6.3.0
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   :  Machine-Load
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals
      INTEGER  S2M, LRR, InitEx, InitGv
      REAL     Pout, IMACA, IMACB, IMACC
      REAL     V_Gen_LV, V_Load_HV, V_Gen_HV
      REAL     V_Load_LV, P_Load, RT_1, W, RT_2
      REAL     RT_3, RT_4(3), cfld, vfld, TM
      REAL     Tmstdy, RT_5, RT_6, RT_7, RT_8
      REAL     RT_9, RT_10, Q_Load, RT_11, Qout
      REAL     ILoadA, ILoadB, ILoadC, IA, IB, IC
      REAL     Rang, RelVlv, JetDef

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7, RVD1_8
      REAL     RVD1_9, RVD1_10, RVD1_11, RVD1_12
      REAL     RVD1_13, RVD1_14, RVD1_15, RVD1_16
      REAL     RVD1_17, RVD1_18

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 4
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 38
      IPGB      = NPGB
      NPGB      = NPGB + 15
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 42
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Pout     = STOF(ISTOF + 1)
      IMACA    = STOF(ISTOF + 2)
      IMACB    = STOF(ISTOF + 3)
      IMACC    = STOF(ISTOF + 4)
      V_Gen_LV = STOF(ISTOF + 5)
      V_Load_HV = STOF(ISTOF + 6)
      V_Gen_HV = STOF(ISTOF + 7)
      V_Load_LV = STOF(ISTOF + 8)
      P_Load   = STOF(ISTOF + 9)
      RT_1     = STOF(ISTOF + 10)
      W        = STOF(ISTOF + 11)
      RT_2     = STOF(ISTOF + 12)
      RT_3     = STOF(ISTOF + 13)
      cfld     = STOF(ISTOF + 17)
      vfld     = STOF(ISTOF + 18)
      TM       = STOF(ISTOF + 19)
      Tmstdy   = STOF(ISTOF + 20)
      RT_5     = STOF(ISTOF + 21)
      RT_6     = STOF(ISTOF + 22)
      RT_7     = STOF(ISTOF + 23)
      RT_8     = STOF(ISTOF + 24)
      RT_9     = STOF(ISTOF + 25)
      S2M      = STOI(ISTOI + 1)
      LRR      = STOI(ISTOI + 2)
      RT_10    = STOF(ISTOF + 26)
      Q_Load   = STOF(ISTOF + 27)
      RT_11    = STOF(ISTOF + 28)
      Qout     = STOF(ISTOF + 29)
      InitEx   = STOI(ISTOI + 3)
      InitGv   = STOI(ISTOI + 4)
      ILoadA   = STOF(ISTOF + 30)
      ILoadB   = STOF(ISTOF + 31)
      ILoadC   = STOF(ISTOF + 32)
      IA       = STOF(ISTOF + 33)
      IB       = STOF(ISTOF + 34)
      IC       = STOF(ISTOF + 35)
      Rang     = STOF(ISTOF + 36)
      RelVlv   = STOF(ISTOF + 37)
      JetDef   = STOF(ISTOF + 38)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         RT_4(IT_0) = STOF(ISTOF + 13 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 3 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 

      RT_6 = 1.07

! 20:[timerdefn]  
!  Timer
      IF(TIME.GE.0.3)THEN
        S2M = 1
      ELSE
        S2M = 0
      END IF
!

! 30:[timerdefn]  
!  Timer
      IF(TIME.GE.0.4)THEN
        LRR = 1
      ELSE
        LRR = 0
      END IF
!

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+7), (IBRCH+8), (IBRCH+9),SS,1.0,0)

! 80:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+16), (IBRCH+17), (IBRCH+18),SS,1.0,0)

! 100:[const] Real Constant 

      RT_5 = 1.0

! 110:[pgb] Output Channel 'Trafo prim current, phase A'

      PGB(IPGB+1) = IMACA

! 120:[pgb] Output Channel 'Trafo prim current, phase B'

      PGB(IPGB+2) = IMACB

! 130:[pgb] Output Channel 'Trafo prim current, phase C'

      PGB(IPGB+3) = IMACC

! 140:[hy_gov] Hydro Governor 
      CALL COMPONENT_ID(ICALL_NO,1719332816)
! Mechanical-Hydraulic Governor for Hydro Generators.
      CALL HGOV11_EXE(RT_5,W,RT_8,RT_9,InitGv)

! 150:[hy_tur] Hydro Turbine 
      CALL COMPONENT_ID(ICALL_NO,234096661)
! Non-Linear Model of Turbine with Non-Elastic Water Column
      CALL HTUR11_EXE(RT_5,W,Tmstdy,TM,RT_8,0.0,1.0,RT_9,InitGv)
      RelVlv = STORF(THIS+6)
      JetDef = STORF(THIS+7)

! 160:[sync_machine] Synchronous Machine 'HydroGener'
      CALL COMPONENT_ID(ICALL_NO,677835314)
! RVD1_1 - Speed
! RVD1_2 - Neutral Voltage
! RVD1_3 - Neutral Current
! RVD1_4 - Load Angle
! RVD1_5 - Rotor Mechanical Angle
! RVD1_6 - Real Power output
! RVD1_7 - Reactive Power output
! RVD1_8 - Mechanical Torque
! RVD1_9 - Electrical Torque
! RVD1_10:15 - Monitored STOR locations
! RVD1_16:17 - Terminal Voltage RMS,pu
! RVD1_18 - Inverse of Base MVA
! IVD1_2 - Machine is active, Initialize exciter
! IVD1_3 - Torque driven, Initialize governor/turbine
      STORI(NSTORI) = NINT(STOR(NEXC+294))
      IVD1_1 = NRTCF
      RVD1_1 = RTCF(IVD1_1+2)
      CALL SYNCMC3P1_EXE(SS,  (IBRCH+19), (IBRCH+20), (IBRCH+21),0.0,0,S&
     &2M,1.0,0,LRR,RVD1_1,TM,0,0,1.0,0.0,314.15926,vfld,0,1.0,cfld,RVD1_&
     &2,RVD1_3,RVD1_4,RVD1_5,W,RT_1,RVD1_6,RVD1_7,RVD1_8,RVD1_9,IVD1_2,I&
     &VD1_3,RVD1_10,RVD1_11,RVD1_12,RVD1_13,RVD1_14,RVD1_15)
      RT_2 = TM
      IF (IVD1_3 .EQ. 0) RT_2 = RVD1_8
      Tmstdy = RVD1_8
      RT_3 = STOR(NEXC-375+265)*STOR(NEXC-375+302)
      IF ((IVD1_2 .EQ. 1) .AND. (STORI(NSTORI).EQ.0)) THEN
          IF (STOR(NEXC-375+293).GT.0.5) THEN
              STORF(NSTORF) = STOR(NEXC-375+161)
          ELSE
              STORF(NSTORF) = STOR(NEXC-375+296)
          ENDIF
      ENDIF
      IF (IVD1_2 .EQ. 1) THEN
        STORF(NSTORF+1) = STORF(NSTORF+1) + (W-RTCF(IVD1_1+2))*DELT
        IF (IVD1_3 .EQ. 0) STORF(NSTORF+2) = RVD1_4
        STORF(NSTORF+3) = STORF(NSTORF) + STORF(NSTORF+1) + STORF(NSTORF&
     &+2)
      ELSE
        STORF(NSTORF+3) = 0.0
      ENDIF
      RVD1_16 = VM3PH2(SS,NT_2(1),NT_2(2),NT_2(3),0.02)/(SQRT_3*RTCF(IVD&
     &1_1+1))
      IF(RVD1_16 .LT. 1.0E-8) THEN
         RVD1_17 = 1.0
      ELSE
         RVD1_17 = RVD1_16
      ENDIF
      RVD1_18 = 1.0/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      RT_4(1) = RVD1_17
      IF(RVD1_16 .LT. 1.0E-8) THEN
         RT_4(2) = 0.0
         RT_4(3) = 0.0
      ELSE
         RT_4(2) = RVD1_6*RVD1_18/RVD1_17
         RT_4(3) = -RVD1_7*RVD1_18/RVD1_17
      ENDIF
      W = W/RTCF(IVD1_1+2)
      POUT = RVD1_6/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      QOUT = RVD1_7/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      Rang = RVD1_5
      InitGv = IVD1_3
      InitEx = IVD1_2
      NSTORF = NSTORF + 4
      NSTORI = NSTORI + 1

! 170:[excac] Type AC exciter 
      CALL COMPONENT_ID(ICALL_NO,302939570)
! Alternator Supplied Controlled- Rectifier Exciter AC4A
      CALL EXCAC4A2_EXE(RT_6,cfld,RT_4,0.0,RT_3,InitEx,vfld,-1.0E10)
      RT_7 = STORF(THIS)

! 180:[gain] Gain Block 
!  Gain
      RT_10 = 700.0 * Qout

! 190:[sumjct] Summing/Differencing Junctions 
      RT_11 = + RT_10 - Q_Load

! 200:[pgb] Output Channel 'Normalized field voltage'

      PGB(IPGB+4) = vfld

! 210:[pgb] Output Channel 'Electrical reactive power of the generator [p.u.]'

      PGB(IPGB+5) = 700.0 * Qout

! 220:[pgb] Output Channel 'Normalized field current'

      PGB(IPGB+6) = cfld

! 230:[pgb] Output Channel 'Electrical real power of the generator'

      PGB(IPGB+7) = 700.0 * Pout

! 240:[pgb] Output Channel 'Reactive power consumption of transmission grid'

      PGB(IPGB+8) = RT_11

! 260:[pgb] Output Channel 'Speed'

      PGB(IPGB+10) = W

! 1:[fixed_load] Fixed Load 
      CALL LOAD3P1_EXE(SS, (IBRCH+34), (IBRCH+35), (IBRCH+36), (IBRCH+37&
     &), (IBRCH+38), (IBRCH+39))

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = Pout
      STOF(ISTOF + 2) = IMACA
      STOF(ISTOF + 3) = IMACB
      STOF(ISTOF + 4) = IMACC
      STOF(ISTOF + 5) = V_Gen_LV
      STOF(ISTOF + 6) = V_Load_HV
      STOF(ISTOF + 7) = V_Gen_HV
      STOF(ISTOF + 8) = V_Load_LV
      STOF(ISTOF + 9) = P_Load
      STOF(ISTOF + 10) = RT_1
      STOF(ISTOF + 11) = W
      STOF(ISTOF + 12) = RT_2
      STOF(ISTOF + 13) = RT_3
      STOF(ISTOF + 17) = cfld
      STOF(ISTOF + 18) = vfld
      STOF(ISTOF + 19) = TM
      STOF(ISTOF + 20) = Tmstdy
      STOF(ISTOF + 21) = RT_5
      STOF(ISTOF + 22) = RT_6
      STOF(ISTOF + 23) = RT_7
      STOF(ISTOF + 24) = RT_8
      STOF(ISTOF + 25) = RT_9
      STOI(ISTOI + 1) = S2M
      STOI(ISTOI + 2) = LRR
      STOF(ISTOF + 26) = RT_10
      STOF(ISTOF + 27) = Q_Load
      STOF(ISTOF + 28) = RT_11
      STOF(ISTOF + 29) = Qout
      STOI(ISTOI + 3) = InitEx
      STOI(ISTOI + 4) = InitGv
      STOF(ISTOF + 30) = ILoadA
      STOF(ISTOF + 31) = ILoadB
      STOF(ISTOF + 32) = ILoadC
      STOF(ISTOF + 33) = IA
      STOF(ISTOF + 34) = IB
      STOF(ISTOF + 35) = IC
      STOF(ISTOF + 36) = Rang
      STOF(ISTOF + 37) = RelVlv
      STOF(ISTOF + 38) = JetDef

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 13 + IT_0) = RT_4(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'
      REAL    P3PH3         ! 
      REAL    Q3PH3         ! 

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_1(3), NT_2(3), NT_3(3), NT_4(3)

! Control Signals
      REAL     IMACA, IMACB, IMACC, V_Gen_LV
      REAL     V_Load_HV, V_Gen_HV, V_Load_LV
      REAL     P_Load, RT_5, RT_6, Q_Load, ILoadA
      REAL     ILoadB, ILoadC, IA, IB, IC

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 15
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 42
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      IMACA    = STOF(ISTOF + 2)
      IMACB    = STOF(ISTOF + 3)
      IMACC    = STOF(ISTOF + 4)
      V_Gen_LV = STOF(ISTOF + 5)
      V_Load_HV = STOF(ISTOF + 6)
      V_Gen_HV = STOF(ISTOF + 7)
      V_Load_LV = STOF(ISTOF + 8)
      P_Load   = STOF(ISTOF + 9)
      RT_5     = STOF(ISTOF + 21)
      RT_6     = STOF(ISTOF + 22)
      Q_Load   = STOF(ISTOF + 27)
      ILoadA   = STOF(ISTOF + 30)
      ILoadB   = STOF(ISTOF + 31)
      ILoadC   = STOF(ISTOF + 32)
      IA       = STOF(ISTOF + 33)
      IB       = STOF(ISTOF + 34)
      IC       = STOF(ISTOF + 35)


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_1(IT_0) = NODE(INODE + 0 + IT_0)
         NT_2(IT_0) = NODE(INODE + 3 + IT_0)
         NT_3(IT_0) = NODE(INODE + 6 + IT_0)
         NT_4(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 

      RT_6 = 1.07

! 40:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS, NT_2(1), NT_2(2), NT_2(3), RT&
     &CF(IVD1_1+2))
      V_Gen_LV = RVD1_1

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      IMACA = CDCTR(1,(IXFMR + 1))
      IMACB = CDCTR(1,(IXFMR + 2))
      IMACC = CDCTR(1,(IXFMR + 3))

! 60:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS, NT_1(1), NT_1(2), NT_1(3), RT&
     &CF(IVD1_1+2))
      V_Gen_HV = RVD1_1

! 70:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS, NT_3(1), NT_3(2), NT_3(3), RT&
     &CF(IVD1_1+2))
      V_Load_HV = RVD1_1

! 80:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      ILoadA = CDCTR(1,(IXFMR + 4))
      ILoadB = CDCTR(1,(IXFMR + 5))
      ILoadC = CDCTR(1,(IXFMR + 6))
      IA = CDCTR(2,(IXFMR + 4))-CDCTR(2,(IXFMR + 6))
      IB = CDCTR(2,(IXFMR + 5))-CDCTR(2,(IXFMR + 4))
      IC = CDCTR(2,(IXFMR + 6))-CDCTR(2,(IXFMR + 5))

! 90:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS, (IBRCH+40), (IBRCH+41), (IBRCH+4&
     &2),RTCF(IVD1_1+2),0)
      P_Load = RVD1_1
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS, (IBRCH+40), (IBRCH+41), (IBRCH+4&
     &2),RTCF(IVD1_1+2),0)
      Q_Load = RVD1_1
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS, NT_4(1), NT_4(2), NT_4(3), RT&
     &CF(IVD1_1+2))
      V_Load_LV = RVD1_1

! 100:[const] Real Constant 

      RT_5 = 1.0

! 250:[pgb] Output Channel 'Reactive power taken by the load'

      PGB(IPGB+9) = Q_Load

! 270:[pgb] Output Channel 'Real power taken by the load'

      PGB(IPGB+11) = P_Load

! 280:[pgb] Output Channel 'Voltage on load bus'

      PGB(IPGB+12) = V_Load_LV

! 290:[pgb] Output Channel 'Voltage on HV side of 400/110 kV trafo'

      PGB(IPGB+13) = V_Load_HV

! 300:[pgb] Output Channel 'Voltage on HV side of generator trafo'

      PGB(IPGB+14) = V_Gen_HV

! 310:[pgb] Output Channel 'Output voltage of generator'

      PGB(IPGB+15) = V_Gen_LV

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 2) = IMACA
      STOF(ISTOF + 3) = IMACB
      STOF(ISTOF + 4) = IMACC
      STOF(ISTOF + 5) = V_Gen_LV
      STOF(ISTOF + 6) = V_Load_HV
      STOF(ISTOF + 7) = V_Gen_HV
      STOF(ISTOF + 8) = V_Load_LV
      STOF(ISTOF + 9) = P_Load
      STOF(ISTOF + 21) = RT_5
      STOF(ISTOF + 22) = RT_6
      STOF(ISTOF + 27) = Q_Load
      STOF(ISTOF + 30) = ILoadA
      STOF(ISTOF + 31) = ILoadB
      STOF(ISTOF + 32) = ILoadC
      STOF(ISTOF + 33) = IA
      STOF(ISTOF + 34) = IB
      STOF(ISTOF + 35) = IC


!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_5, RT_6

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3, IVD1_4
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD10_1(10)
      REAL     RVD10_2(10)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 42
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 
      RT_6 = 1.07

! 20:[timerdefn]  

! 30:[timerdefn]  

! 50:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,1680031444)
      RVD1_1 = ONE_3RD*820.0
      RVD1_2 = 400.0*SQRT_1BY3
      RVD1_3 = 26.0
      CALL E_TF2W_CFG((IXFMR + 1),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 2),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 3),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(820.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+1),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+2),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+3),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+4),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+5),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+6),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+7), (IBRCH+8), (IBRCH+9),SS,RVD1_1,RVD1_2,0&
     &.2,1.25,50.0,1.0,1.0,0.0)

! 80:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,372221738)
      RVD1_1 = ONE_3RD*800.0
      RVD1_2 = 400.0*SQRT_1BY3
      RVD1_3 = 110.0
      CALL E_TF2W_CFG((IXFMR + 4),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 5),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 6),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(800.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+10),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+11),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+12),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+13),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+14),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+15),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+16), (IBRCH+17), (IBRCH+18),SS,RVD1_1,RVD1_&
     &2,0.2,1.25,50.0,1.0,1.0,0.0)

! 100:[const] Real Constant 
      RT_5 = 1.0

! 110:[pgb] Output Channel 'Trafo prim current, phase A'

! 120:[pgb] Output Channel 'Trafo prim current, phase B'

! 130:[pgb] Output Channel 'Trafo prim current, phase C'

! 140:[hy_gov] Hydro Governor 
      CALL COMPONENT_ID(ICALL_NO,1719332816)
      CALL HGOV11_CFG(0.0,0.05,5.0,0.16,0.16,1.0,0.0,0.2,0.04,0.4,5.0)

! 150:[hy_tur] Hydro Turbine 
      CALL COMPONENT_ID(ICALL_NO,234096661)
      RVD1_1 = 0.05
      RVD1_2 = SQRT(1.0/(0.02+1.0/(1.0*1.0)))
      RVD1_3 = 1.0/(0.02*1.0*1.0+1.0)
      RVD1_4 = 1.0/(RVD1_3*(RVD1_2-RVD1_1))
      CALL HTUR11_CFG(RVD1_4,RVD1_1,2.0,0.02,0.5,1.0)

! 160:[sync_machine] Synchronous Machine 'HydroGener'
      CALL COMPONENT_ID(ICALL_NO,677835314)
      RVD10_1(1) = 0.0
      RVD10_2(1) = 0.0
      RVD10_1(2) = 1.0
      RVD10_2(2) = SQRT_2/(1.014-0.163*1.0)
      RVD10_1(3) = -1.0
      RVD10_2(3) = 0.0
      DO IVD1_1 = 4,10
        RVD10_1(IVD1_1) = 0.0
        RVD10_2(IVD1_1) = 0.0
      ENDDO
      CALL SYNCMC3P0_CFG(1,0,1,314.15926,0.0051716, 0.163,1.0,1.014,0.28&
     &,0.314,1.0E-6, 0.77,0.375,0.228,RVD1_1,RVD1_2,RVD1_3)
      RVD1_4 = 0.0/(3.0*15.01*15.56)
      RVD1_5 = 0.0/(3.0*15.01*15.56)
      CALL SYNCMC3P1_CFG(1,1,1,1,1,1,1,1,1,15.56,15.01,314.15926,10000.0&
     &,0.0,3.117,0.0,300.0,RVD1_1,RVD1_2,1.014,0.28, 0.039,0.314,6.55,1.&
     &0E6,1.0E6, 0.77,0.375,0.071, 1.0E6,1.0E6, RVD10_1,RVD10_2, 1.07,0.&
     &0,RVD1_4,RVD1_5,0.0, 0.1,100.0,0.2,1.07,0.0)

! 170:[excac] Type AC exciter 
      CALL COMPONENT_ID(ICALL_NO,302939570)
      CALL EXCAC4A2_CFG(10.0,1.0,200.0,0.015,10.0,-10.0,1.8,-4.53,0.0,0.&
     &0,0.0,0.0)

! 180:[gain] Gain Block 

! 190:[sumjct] Summing/Differencing Junctions 

! 200:[pgb] Output Channel 'Normalized field voltage'

! 210:[pgb] Output Channel 'Electrical reactive power of the generator [p.u.]'

! 220:[pgb] Output Channel 'Normalized field current'

! 230:[pgb] Output Channel 'Electrical real power of the generator'

! 240:[pgb] Output Channel 'Reactive power consumption of transmission grid'

! 260:[pgb] Output Channel 'Speed'

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1296476882)
      CALL PI3_SECTION_CFG(3,1,0, 400.0,250.0,50.0,50000.0,7.4e-08,8.0e-&
     &07,2.2e-06,2.2e-07,2.4e-06,1.2e-06,RVD1_1,RVD1_2,RVD1_3,RVD1_4,RVD&
     &1_5,RVD1_6,IVD1_1,IVD1_2,IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+22),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+23),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+24),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+25),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+26),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+27),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+28),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+29),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+30),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+31),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+32),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+33),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 7),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

! 1:[fixed_load] Fixed Load 
      CALL LOAD1P1_CFG(63.5,50.0,269.33,88.33,2.0,2.0,0.0,0.0)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_5, RT_6

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 42
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[const] Real Constant 
      RT_6 = 1.07

! 40:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(26.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(26.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02

! 60:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(400.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(400.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02

! 70:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(400.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(400.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02

! 90:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(110.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(110.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02

! 100:[const] Real Constant 
      RT_5 = 1.0

! 250:[pgb] Output Channel 'Reactive power taken by the load'

! 270:[pgb] Output Channel 'Real power taken by the load'

! 280:[pgb] Output Channel 'Voltage on load bus'

! 290:[pgb] Output Channel 'Voltage on HV side of 400/110 kV trafo'

! 300:[pgb] Output Channel 'Voltage on HV side of generator trafo'

! 310:[pgb] Output Channel 'Output voltage of generator'

      RETURN
      END

